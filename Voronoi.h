#ifndef VORONOI_H
#define VORONOI_H

#include "Tetrahedron.h"

class VFace
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief The vertices index
    //----------------------------------------------------------------------------------------------------------------------
    std::vector<unsigned int> m_vert;


};
class Voronoi
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor for Voronoi
    //----------------------------------------------------------------------------------------------------------------------
    Voronoi();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor for Voronoi that sets the tetrahedra list
    //----------------------------------------------------------------------------------------------------------------------
    Voronoi(std::vector<Tetrahedron*> _t);
    std::vector<ngl::Vec3> getVertices() const { return m_vertices; }
    std::vector<ngl::Vec3> getEdges() const { return m_edges; }
    void setVertex(ngl::Vec3 _v);
    void setFace(VFace _f);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief function that draws the voronoi edges
    //----------------------------------------------------------------------------------------------------------------------
    void draw();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief function that creates the voronoi edges
    //----------------------------------------------------------------------------------------------------------------------
    void createVAOLines();
    //----------------------------------------------------------------------------------------------------------------------


private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief stores the list od tetrahedrons created
    //----------------------------------------------------------------------------------------------------------------------
    std::vector<Tetrahedron*> m_tetrahedra;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief stores vertices of the voronoi diagram
    //----------------------------------------------------------------------------------------------------------------------
    std::vector<ngl::Vec3> m_vertices;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief stores the Voronoi edges
    //----------------------------------------------------------------------------------------------------------------------
    std::vector<ngl::Vec3> m_edges;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief stores the Voronoi faces
    //----------------------------------------------------------------------------------------------------------------------
    std::vector<VFace> m_faces;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief id for our vertexArray object
    //----------------------------------------------------------------------------------------------------------------------
    ngl::VertexArrayObject *m_vaoMesh;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief flag to indicate if a VBO has been created
    //----------------------------------------------------------------------------------------------------------------------
    bool m_vao;

private :
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief function that sets the voronoi vertices
    //----------------------------------------------------------------------------------------------------------------------
    void setCenter();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief function that creates the voronoi edge
    //----------------------------------------------------------------------------------------------------------------------
    void setEdge();
};

#endif // VORONOI_H
