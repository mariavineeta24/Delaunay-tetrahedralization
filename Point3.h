#ifndef POINT3_H
#define POINT3_H

//----------------------------------------------------------------------------------------------------------------------
/// @file Point3.h
/// @author Maria Vineeta Bagya Seelan
/// @version 1.0
/// @date 16/08/13
/// Revision History :
/// Initial Version 16/08/13
/// @class Point3
/// @brief This is the class that encapsulates a three ngl::Vec3 object
/// @brief (defines a triangle with three vertices defined by ABC)
//----------------------------------------------------------------------------------------------------------------------

#include "ngl/Vec3.h"

class Point3
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Constructor for Point3
    //----------------------------------------------------------------------------------------------------------------------
    Point3();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief constructor of Point3 that sets 3 ngl::Vec3 values(ABC)
    /// @param[in]  _a the A component
    /// @param[in]  _b the B component
    /// @param[in]  _c the C component
    //----------------------------------------------------------------------------------------------------------------------
    Point3(
            ngl::Vec3 _a,
            ngl::Vec3 _b,
            ngl::Vec3 _c
          )
        : m_a(_a),
          m_b(_b),
          m_c(_c){}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief Destructor for Point3
    //----------------------------------------------------------------------------------------------------------------------
    ~Point3(){}
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief accessor to get the point A
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 getPointA() const { return m_a; }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief accessor to get the point B
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 getPointB() const { return m_b; }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief accessor to get the point C
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 getPointC() const { return m_c; }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief sets the A component
    //----------------------------------------------------------------------------------------------------------------------
    void setPointA(ngl::Vec3 _a) { m_a = _a; }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief sets the B component
    //----------------------------------------------------------------------------------------------------------------------
    void setPointB(ngl::Vec3 _b) { m_b = _b; }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief sets the C component
    //----------------------------------------------------------------------------------------------------------------------
    void setPointC(ngl::Vec3 _c) { m_c = _c; }
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief insertion operator to print out the Point3
    /// @param[in] _output the stream to write to
    /// @param[in] _s the Point3 to write
    //----------------------------------------------------------------------------------------------------------------------
    friend std::ostream& operator<<(std::ostream& _output, const Point3 &_s);

public :
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the A component
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_a;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the B component
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_b;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief the C component
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Vec3 m_c;
    //----------------------------------------------------------------------------------------------------------------------
};

#endif // POINT3_H


